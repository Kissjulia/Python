"""
Задание 4.
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод init()), который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.

31 22
37 43
51 86

3 5 32
2 4 6
-1 64 -8

3 5 8 3
8 3 7 1

Следующий шаг — реализовать перегрузку метода str() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода add() для реализации операции сложения двух объектов класса Matrix (двух матриц). Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с первым элементом первой строки второй матрицы и т.д.
"""
class Matrix:
    def __init__(self, matr) -> None:

        self.matr: list = matr

    def __str__(self) -> str:
        return ('\n'.join('\t'.join(map(str, row)) for row in self.matr))

    def __add__(self, other):
        result: list = []
        result = [[self.matr[i][j] + other.matr[i][j] for j in range
                   (len(self.matr[0]))] for i in range(len(self.matr))]
        return ('\n'.join('\t'.join(map(str, row)) for row in result))


M1 = Matrix([[2, 3, 5], [3, 4, 5], [8, 9, 5]])
M2 = Matrix([[3, 0, 2], [5, 4, 5], [4, 3, 1]])
print("______M1____________")
print(M1)
print("______M2____________")
print(M2)
print("______M1+M2_________")
print(M1+M2)